<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="Pressure_Transducer" Id="{302221ad-eb51-4a9c-ae78-69484aab77d8}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Pressure_Transducer
VAR_INPUT
	Input_mA						:	INT		:=	0;		//	Field Input Whereby 4 - 20mA Will Be Read As A 0 - 32768 Value From I/O Card
	Sensor_Minimum_SI_Measurement	:	REAL	:=	0.000;	//	kPa (a)
	Sensor_Maximum_SI_Measurement	:	REAL	:=	500.0;	//	kPa (a)
	
	//	Alarm Setpoints
	High_Alarm_Setpoint				:	REAL	:=	480.0;	//	kPa(a)
	Low_Alarm_Setpoint				:	REAL	:= 	87.00;	//	Kpa(a) @ Atmosphere
END_VAR
VAR_OUTPUT
	Input_SI						:	lREAL	:=	0.0;	//	Field Input In SI units
	
	//	Alarming 
	ScalingErrorDetected			: 	BOOL	:=	FALSE;
	High_Alarm						:	BOOL	:=	FALSE;
	Low_Alarm						:	BOOL	:=	FALSE;
END_VAR
VAR
	Field_Measurement_Scaler		:	FB_CTRL_SCALE;		//	Function To Scale 4 - 20mA To 0 - 500kPa Measurement
	ScalingErrorId					:	E_CTRL_ERRORCODES;
	ScalingParameters				: 	ST_CTRL_SCALE_PARAMS;
END_VAR

VAR	//	Trend Variables
	SamplingTimer					:	TON;
	SampleInterval					:	TIME	:= T#250MS;
	DataArray						:	ARRAY[1..1000] OF REAL;
	ArrayIndex						:	INT     := 	1;	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[{Region "Scaling Setpoints"}
ScalingParameters.fInMin				:=		0;
ScalingParameters.fInMax				:=		32768;	//	16-Bit Analogue Input Card Maximum Reading (EL3024)
ScalingParameters.fOutMin				:=		Sensor_Minimum_SI_Measurement;	//	kPa
ScalingParameters.fOutMax				:=		Sensor_Maximum_SI_Measurement;	//	kPa
ScalingParameters.tCtrlCycleTime		:=		T#10MS;
ScalingParameters.tTaskCycleTime		:=		T#10MS;
{endregion}

{Region "Scale Input To SI Value"}
Field_Measurement_Scaler(	fIn			:=	Input_mA,
							fOut		=>	Input_SI,
							eErrorId	=>	ScalingErrorId,
							bError		=>	ScalingErrorDetected,
							stParams	:=	ScalingParameters);
{endregion}							
							
{region "Alarm_Detection"}
//	Low Alarm Functionality: Single Shot Pulse Will Set An Event In The Event Manager
IF(Input_SI <= Low_Alarm_Setpoint)THEN
	Low_Alarm	:=	TRUE;
ELSE
	Low_Alarm	:=	FALSE;		 
END_IF;
	 
//	High Alarm Functionality Single Shot Pulse Will Set An Event In The Event Manager
IF(Input_SI >= High_Alarm_Setpoint)THEN
	High_Alarm	:=	TRUE;
ELSE
	High_Alarm	:=	FALSE;		 
END_IF;		  
{endregion}						

{region	"Trend Generation"}
	IF(NOT SamplingTimer.Q)THEN
		SamplingTimer(In := TRUE,   PT := SampleInterval, Q=> , ET => );		//Start the timer
	ELSE	
		SamplingTimer(In := FALSE,  PT := SampleInterval, Q=> , ET => );		//Reset the timer
	 				  
		FOR ArrayIndex := 1 TO 999 BY 1 DO										//Shift the content in the array up by 1
			DataArray[ArrayIndex] := DataArray[ArrayIndex + 1];	 			//But it skips the last element (1000)
		END_FOR;	
			 
		DataArray[1000]				:=	Input_SI;								//This added the new reading to the last element (1000)
	END_IF;
{endregion}]]></ST>
    </Implementation>
    <LineIds Name="Pressure_Transducer">
      <LineId Id="387" Count="44" />
      <LineId Id="84" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>